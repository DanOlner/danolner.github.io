{
  "hash": "ce2aa0e0f4eef34b3b137e9aa8a0b5cf",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Outputs live list (currently for Y-PERN)\"\nauthor: \"Dan Olner\"\ndate: \"2025-02-12\"\ncategories: [planning]\nexecute:\n  echo: false\n  warning: false\n  error: false\n---\n\n::: {.cell}\n\n:::\n\n\n\n\n\n## What's this page?\n\n* A live list of stuff I've made in my policy fellow role, working with [Y-PERN](https://y-pern.org.uk/), University of Sheffield [Management School](https://www.sheffield.ac.uk/management) and [SYMCA](https://www.southyorkshire-ca.gov.uk/).\n* I'll add to this same post as new stuff appears.\n* I'll also use this to note where I think a piece of work might go next, what's missing, what else it connects with.\n\n\n\n## Outputs\n\n[RegEconTools website](https://danolner.github.io/RegionalEconomicTools/). All of this work comes under the broad heading of \"Open regional economic data and tools\"; this website is where I'm collating as much of it as I can. [Here's the website repo](https://github.com/DanOlner/RegionalEconomicTools).\n\n### Outputs on the RegEconTools website currently:\n\n* Resource: Linked [regional GVA and job count data](https://danolner.github.io/RegionalEconomicTools/regionalgva_n_bres.html), including more accurate BRES job counts[^1].\n* Explainer / R guide: [location quotients and proportion plots](https://danolner.github.io/RegionalEconomicTools/sector_locationquotients_and_proportions.html) for UK regional secotrs: processing and mapping (using the above data).\n* Explainer / R guide: [analysing regional GVA gaps](https://danolner.github.io/RegionalEconomicTools/gdp_gaps.html) (using the above data). Breaking down by ITL2, ITL3, core cities and mayoral authorities.\n* Explainer / R guide: [comparing different GVA productivity measures](https://danolner.github.io/RegionalEconomicTools/beattyfothergill.html) using Beatty & Fothergill's range of metrics.\n\n### Other outputs:\n\n* \n\n\n### Things to improve / work on\n\n\n\n\n\n## Bits and bobs\n\n\n\n\n[^1]: See the link for why I think it's possible to get more accurate job data from BRES directly.\n\n\n![](---.png)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}